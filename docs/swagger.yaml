basePath: /v1
definitions:
  common.BaseResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  models.UserProfile:
    properties:
      avatar_file_key:
        type: string
      nickname:
        type: string
      uid:
        type: string
      username:
        type: string
    type: object
  user.loginResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      token:
        type: string
    type: object
  user.loginWithEmailParameter:
    properties:
      device_name:
        description: 登录的设备的名字，浏览器为 “浏览器(ip所在的城市)”
        example: bob的iPhone
        type: string
      email:
        description: 邮箱
        example: haha@test.com
        type: string
      password:
        description: 密码
        example: qwerty123
        type: string
    required:
    - email
    - password
    type: object
  user.loginWithUsernameParameter:
    properties:
      device_name:
        description: 登录的设备的名字，浏览器为 “浏览器(ip所在的城市)”
        example: bob的iPhone
        type: string
      password:
        description: 密码
        example: qwerty123
        type: string
      username:
        description: 用户名
        example: bob
        type: string
    required:
    - password
    - username
    type: object
  user.registerParameter:
    properties:
      email:
        description: 邮箱
        example: haha@test.com
        type: string
      password:
        description: 密码
        example: qwerty123
        type: string
      username:
        description: 用户名
        example: bob
        type: string
    required:
    - email
    - password
    - username
    type: object
  user.registerResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  user.sEmailLoginParameter:
    properties:
      device_name:
        description: 登录的设备的名字，浏览器为 “浏览器(ip所在的城市)”
        example: bob的iPhone
        type: string
      email:
        description: 邮箱
        example: haha@test.com
        type: string
      verificationCode:
        description: 验证码
        example: "623597"
        type: string
    required:
    - email
    - verificationCode
    type: object
  user.sEmailRegisterParameter:
    properties:
      device_name:
        description: 登录的设备的名字，浏览器为 “浏览器(ip所在的城市)”
        example: bob的iPhone
        type: string
      email:
        description: 邮箱
        example: haha@test.com
        type: string
    required:
    - email
    type: object
  user_profile.getProfileResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      profile:
        $ref: '#/definitions/models.UserProfile'
        type: object
    type: object
  user_profile.updateAvatarResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  user_profile.updateProfileParameter:
    properties:
      nickname:
        description: 昵称
        example: "jc\U0001F604taoo"
        type: string
    type: object
  user_profile.updateProfileResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      nickname:
        description: 更改后的昵称
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 一个轻社区app, 内置直播, 帮助用户找到身边的兴趣圈
  license: {}
  termsOfService: http://swagger.io/terms/
  title: DulceDayServer
  version: "1.0"
paths:
  /static/{key}:
    get:
      parameters:
      - description: 资源路径
        in: path
        name: key
        required: true
        type: string
      summary: 获取静态资源
  /user/login/email:
    post:
      parameters:
      - description: 参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.loginWithEmailParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 使用邮箱登陆
  /user/login/sensitive/email:
    post:
      parameters:
      - description: 参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.sEmailLoginParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 使用邮箱进行敏感登陆验证, 需要事先登录
  /user/login/username:
    post:
      parameters:
      - description: 参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.loginWithUsernameParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 使用用户名登陆
  /user/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_profile.getProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取登录用户信息
  /user/profile/{username}:
    get:
      parameters:
      - description: 用户名
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_profile.getProfileResponse'
      summary: 获取用户信息
  /user/profile/update:
    put:
      parameters:
      - description: 参数
        in: body
        name: userProfile
        required: true
        schema:
          $ref: '#/definitions/user_profile.updateProfileParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_profile.updateProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
  /user/profile/update/avatar:
    put:
      parameters:
      - description: 头像图片
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_profile.updateAvatarResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新头像 (文件传输 go-swagger 无法胜任，请使用 postman 等工具)
  /user/register:
    post:
      parameters:
      - description: 参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.registerParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.registerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.BaseResponse'
      summary: 注册
  /user/register/sensitive/email:
    post:
      parameters:
      - description: 参数
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.sEmailRegisterParameter'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.loginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.BaseResponse'
      security:
      - ApiKeyAuth: []
      summary: 敏感注册，用于生成验证码等, 需要事先登录
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
